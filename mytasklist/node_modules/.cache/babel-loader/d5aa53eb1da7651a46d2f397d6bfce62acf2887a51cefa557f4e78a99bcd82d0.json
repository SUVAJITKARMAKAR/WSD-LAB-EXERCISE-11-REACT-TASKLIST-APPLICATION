{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHRIST\\\\Assignments\\\\WEBDEVELOPMENT\\\\LAB-EXERCISE-11\\\\mytasklist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editTask, setEditTask] = useState({\n    id: null,\n    name: ''\n  });\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, {\n        id: Date.now(),\n        name: newTask\n      }]);\n      setNewTask('');\n    }\n  };\n  const editTaskName = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      name: editTask.name\n    } : task);\n    setTasks(updatedTasks);\n    setEditTask({\n      id: null,\n      name: ''\n    });\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" TASK LIST \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.id === editTask.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"taskField\",\n            type: \"text\",\n            value: editTask.name,\n            onChange: e => setEditTask({\n              id: task.id,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnSave\",\n            onClick: () => editTaskName(task.id),\n            children: \" SAVE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [task.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditTask({\n              id: task.id,\n              name: task.name\n            }),\n            children: \"EDIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task.id),\n            children: \" DELETE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskAdder\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputBox\",\n        type: \"text\",\n        placeholder: \"New Task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"taskAdderButton\",\n        onClick: addTask,\n        children: \"ADD TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"ePh9SJqHr2Nez16Pw0C+4/WDar4=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","tasks","setTasks","newTask","setNewTask","editTask","setEditTask","id","name","addTask","trim","Date","now","editTaskName","taskId","updatedTasks","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/CHRIST/Assignments/WEBDEVELOPMENT/LAB-EXERCISE-11/mytasklist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editTask, setEditTask] = useState({ id: null, name: '' });\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, { id: Date.now(), name: newTask }]);\n      setNewTask('');\n    }\n  };\n\n  const editTaskName = (taskId) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === taskId ? { ...task, name: editTask.name } : task\n    );\n    setTasks(updatedTasks);\n    setEditTask({ id: null, name: '' });\n  };\n\n  const deleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  return (\n\n    <div className='main'>\n      <h1> TASK LIST </h1>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            {task.id === editTask.id ? (\n              <>\n                <input\n                  className='taskField'\n                  type=\"text\"\n                  value={editTask.name}\n                  onChange={(e) => setEditTask({ id: task.id, name: e.target.value })}\n                />\n                <button className='btnSave' onClick={() => editTaskName(task.id)}> SAVE </button>\n              </>\n            ) : (\n              <>\n                {task.name}\n                <button onClick={() => setEditTask({ id: task.id, name: task.name })}>\n                  EDIT \n                </button>\n                <button onClick={() => deleteTask(task.id)}> DELETE </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n\n      <div className='taskAdder'>\n        <input\n          className='inputBox'\n          type=\"text\"\n          placeholder=\"New Task\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button className='taskAdderButton' onClick={addTask}> \n        ADD TASK \n        </button>\n      </div>\n\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,EAAE,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEhE,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzBR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEM,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEJ,IAAI,EAAEL;MAAQ,CAAC,CAAC,CAAC;MACvDC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMS,YAAY,GAAIC,MAAM,IAAK;IAC/B,MAAMC,YAAY,GAAGd,KAAK,CAACe,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACV,EAAE,KAAKO,MAAM,GAAG;MAAE,GAAGG,IAAI;MAAET,IAAI,EAAEH,QAAQ,CAACG;IAAK,CAAC,GAAGS,IAC1D,CAAC;IACDf,QAAQ,CAACa,YAAY,CAAC;IACtBT,WAAW,CAAC;MAAEC,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMU,UAAU,GAAIJ,MAAM,IAAK;IAC7B,MAAMC,YAAY,GAAGd,KAAK,CAACkB,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKO,MAAM,CAAC;IAC/DZ,QAAQ,CAACa,YAAY,CAAC;EACxB,CAAC;EAED,oBAEEnB,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBzB,OAAA;MAAAyB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB7B,OAAA;MAAAyB,QAAA,EACGpB,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAAyB,QAAA,EACGJ,IAAI,CAACV,EAAE,KAAKF,QAAQ,CAACE,EAAE,gBACtBX,OAAA,CAAAE,SAAA;UAAAuB,QAAA,gBACEzB,OAAA;YACEwB,SAAS,EAAC,WAAW;YACrBM,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEtB,QAAQ,CAACG,IAAK;YACrBoB,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAAC;cAAEC,EAAE,EAAEU,IAAI,CAACV,EAAE;cAAEC,IAAI,EAAEqB,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC,eACF7B,OAAA;YAAQwB,SAAS,EAAC,SAAS;YAACW,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACI,IAAI,CAACV,EAAE,CAAE;YAAAc,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACjF,CAAC,gBAEH7B,OAAA,CAAAE,SAAA;UAAAuB,QAAA,GACGJ,IAAI,CAACT,IAAI,eACVZ,OAAA;YAAQmC,OAAO,EAAEA,CAAA,KAAMzB,WAAW,CAAC;cAAEC,EAAE,EAAEU,IAAI,CAACV,EAAE;cAAEC,IAAI,EAAES,IAAI,CAACT;YAAK,CAAC,CAAE;YAAAa,QAAA,EAAC;UAEtE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7B,OAAA;YAAQmC,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAACD,IAAI,CAACV,EAAE,CAAE;YAAAc,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC7D;MACH,GAnBMR,IAAI,CAACV,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEL7B,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBzB,OAAA;QACEwB,SAAS,EAAC,UAAU;QACpBM,IAAI,EAAC,MAAM;QACXM,WAAW,EAAC,UAAU;QACtBL,KAAK,EAAExB,OAAQ;QACfyB,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF7B,OAAA;QAAQwB,SAAS,EAAC,iBAAiB;QAACW,OAAO,EAAEtB,OAAQ;QAAAY,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACzB,EAAA,CAtEQD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAwEjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}